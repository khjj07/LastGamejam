local DefUI= require "DefUtil.DefUI.DefUI"
local UI = require "game.ui.ingame.ingame"
local MAX = 20
local MAX_SIZE=400


function update_life(self,life)
	print(life)
	if life>0 then
		for i = 1, life do
			self.box_node["life"..tostring(i)]:show()
		end
	end
	if life<3 and life>-1 then
		for i = life+1, 3 do
			self.box_node["life"..tostring(i)]:hide()
		end
	end
end
function update_fever(self,value)
	self.fever=value
	if self.fever>=MAX then
		self.fever=MAX
	end
	local size = self.box_node["fever_gague"]:get_size()
	local pos = vmath.vector3(-190,0,0)
	size.x = value*MAX_SIZE/MAX
	pos.x=pos.x-size.x/40
	self.box_node["fever_gague"]:set_size(size)
	self.box_node["fever_gague"]:set_position(pos)
end


function init(self)
	math.randomseed(os.time())
	DefUI.init(self)
	UI.init(self)
	update_fever(self,0)
end


function on_message(self, message_id, message, sender)
	if message_id==hash("update_life") then
		update_life(self,message.life)
	end
	if message_id==hash("update_fever") then
		update_fever(self, message.value)
	end	
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
